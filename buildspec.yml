version: 0.2
 
phases:
  install:
    runtime-versions:
      nodejs: 22.x  # Specify the Node.js version you are using
    commands:
      # Install dependencies (if any)
      - echo "Installing npm dependencies..."
      - npm install
 
  pre_build:
    commands:
      # Run tests (optional, if you have any)
      - echo "Running tests..."
      - npm run test
      # mvn sonar:sonar -Dsonar.projectKey=vineet-shukla-web -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=bd00251a78d0c613cc35764bd038bbe053a7fe0e
 
  build:
    commands:
      # Create a zip file including everything in the root directory
      - echo "Zipping the whole application..."
      - zip -r bookstore.zip .  # Zips the entire project folder (including node_modules, src, etc.)
 
      # Upload the zip file to S3
      - echo "Uploading bookstore.zip to S3..."
      - aws s3 cp bookstore.zip s3://bookstores-lambda-code/bookstore.zip  # Replace with your S3 bucket name
 
  post_build:
    commands:
      # Deploy Lambda function from the S3 bucket
      - echo "Updating Lambda functions..."
 
      # Lambda Function createBook
      - aws lambda update-function-code --function-name createBook --s3-bucket bookstores-lambda-code --s3-key bookstore.zip
      - echo "Lambda function createBook deployed successfully!"

      # Lambda Function getBooks
      - aws lambda update-function-code --function-name getBooks --s3-bucket bookstores-lambda-code --s3-key bookstore.zip
      - echo "Lambda function getBooks deployed successfully!"

      # Lambda Function updateBook
      - aws lambda update-function-code --function-name updateBook --s3-bucket bookstores-lambda-code --s3-key bookstore.zip
      - echo "Lambda function updateBook deployed successfully!"
     
       # Lambda Function deleteBook
      - aws lambda update-function-code --function-name deleteBook --s3-bucket bookstores-lambda-code --s3-key bookstore.zip
      - echo "Lambda function deleteBook deployed successfully!"
 
artifacts:
  files:
    - '**/*'
  discard-paths: yes